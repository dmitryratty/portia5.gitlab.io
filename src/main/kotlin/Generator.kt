
import java.nio.file.Files
import java.nio.file.Path
import java.nio.file.StandardCopyOption
import kotlin.io.path.deleteRecursively

class Generator {
    companion object {
        @JvmStatic
        fun main(args: Array<String>) {
            Generator().main()
        }
    }

    private fun main() {
        Utils().cleanupBuildDir()
        Utils().generatedPagesDir.toFile().deleteRecursively()
        Utils().generatedPagesDir.toFile().mkdir()
        PagesGenerator().main()
        Favicon().main()
        val srcDir = Utils().resourcesDir.resolve("other")
        val dstDir = Utils().buildOutDir
        Files.walk(srcDir).forEach { src: Path ->
            if (src == srcDir) return@forEach
            Files.copy(src, dstDir.resolve(srcDir.relativize(src)),
                StandardCopyOption.REPLACE_EXISTING)
        }
        Utils().testAutogeneratedDir.resolve("simple-server-list.txt").toFile()
            .writeText(SimpleServer().generateMap())
    }
}